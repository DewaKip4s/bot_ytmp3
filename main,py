import os
from telegram.ext import Application, CommandHandler, MessageHandler, filters
from telegram import Update
from telegram.ext import ContextTypes
from bot import download_audio, download_video

# === Token langsung disini (ganti dengan token botmu) ===
TOKEN = "ISI_TOKEN_BOT_MU_DI_SINI"
PORT = int(os.environ.get("PORT", 8080))

# Buat instance bot
app = Application.builder().token(TOKEN).build()

# /start command
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "Halo bosku üòé\nKirim link YouTube, nanti saya download MP3/MP4 buat kamu üöÄ"
    )

# Handler untuk link YouTube
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if "youtube.com" in text or "youtu.be" in text:
        await update.message.reply_text("Sedang mendownload... ‚è≥")

        try:
            audio_file = download_audio(text, "audio.mp3")
            await update.message.reply_audio(audio=open(audio_file, "rb"))
            os.remove(audio_file)

            video_file = download_video(text, "video.mp4")
            await update.message.reply_video(video=open(video_file, "rb"))
            os.remove(video_file)

        except Exception as e:
            await update.message.reply_text(f"Terjadi error: {e}")
    else:
        await update.message.reply_text("Kirim link YouTube bosku üéµüé¨")

# Tambahkan handler
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# Jalankan webhook
if __name__ == "__main__":
    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN,
        webhook_url=f"https://{os.getenv('RAILWAY_STATIC_URL')}/{TOKEN}"
    )
